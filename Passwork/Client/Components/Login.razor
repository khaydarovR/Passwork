@inject AuthenticationManager AuthenticationManager
@inject NavigationManager NavigationManager
@inject IToastService ToastService
@inject ISnackbar Snackbar

@using System.ComponentModel.DataAnnotations
@using Blazored.Toast.Services;
@using Passwork.Client.Utils;

<MudDialog>
    <DialogContent>
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator />
            <MudGrid>
                <MudItem xs="12" sm="7">
                    <MudCard>
                        <MudCardContent>
                            <MudTextField Label="Email" Class="mt-3"
                            @bind-Value="model.Email" For="@(() => model.Email)" />
                            <MudTextField Label="Password" HelperText="Ваш пароль" Class="mt-3"
                            @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                            
                            <MudTextField Label="Мастер пароль" HelperText="Ключ для шифрования ваших данных"
                                          Class="mt-3" @bind-Value="model.MasterPassword" For="@(() => model.MasterPassword)" />

                            <MudCheckBox T="bool" Label="Запомнить меня" @bind-Value="model.RememberMe" For="@(() => model.RememberMe)" />
                        </MudCardContent>
                        <MudCardActions>
                            <ButtonWait @bind-IsLoad="@isLoad">
                                Войти
                            </ButtonWait>
                        </MudCardActions>
                    </MudCard>
                </MudItem>
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <MudAlert hidden="@isLoad" Severity="Severity.Error">@errorMessage</MudAlert>
                }
            </MudGrid>
        </EditForm>
    </DialogContent>

    <DialogActions>
        <MudButton Color="Color.Secondary" OnClick="@NavigateToRegisterPage">Создать новый аккаунт</MudButton>
        <MudSpacer/>
        <MudButton OnClick="Cancel">Отмена</MudButton>
    </DialogActions>
</MudDialog>


@code {
    UserLoginDto model = new UserLoginDto();
    bool success;
    bool isLoad = false;
    string errorMessage = null;

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    void Cancel() => MudDialog.Cancel();

    private async Task OnValidSubmit(EditContext context)
    {
        if (context.Validate())
        {
            isLoad = true;
            success = true;
            StateHasChanged();

            if (await AuthenticationManager.Login(model))
            {
                AddSnackbarSuc();
                NavigationManager.NavigateTo("/");

            }
            else
            {
                //ToastService.ShowError(AuthenticationManager.ErrorMessage, ErrorType.RegistrationError.ToString());
                AuthenticationManager.ErrorMessage = string.Empty;
                errorMessage = "Неверные данные";
                isLoad = false;
                AddSnackbarError();
            }

            StateHasChanged();
        }
    }

    private void AddSnackbarSuc()
    {
        Snackbar.Add("Успешно зашли", Severity.Success);
    }

    private void AddSnackbarError()
    {
        Snackbar.Add("Ошибка входа", Severity.Error);
    }

    void NavigateToRegisterPage()
    {
        NavigationManager.NavigateTo("/register");
    }
}
